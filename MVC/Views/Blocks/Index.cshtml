@model Core.Models.ProcessDTO

@{
    ViewData["Title"] = "Index";
}

<h5 style="color: red">@TempData["Msg"]</h5>

<h4>Add new process</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="AddProcess">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group col-md-4">
                    <label asp-for="Size" class="control-label"></label>
                    <input asp-for="Size" class="form-control" />
                    <span asp-validation-for="Size" class="text-danger"></span>
                </div>

                <div class="form-group col-md-4">
                    <label asp-for="AlgorithmType" class="control-label"></label>
                    <select asp-for="AlgorithmType" class="form-control" asp-items="ViewBag.AlgorithmType"></select>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="demo-container">
    <h4>Memory Block</h4>
    <hr />
    <div id="blockGrid"></div>
</div>


@section Scripts{

<script>

    $.ajax({
        url: '@Url.Action("GetBlocks", "Blocks")',
        type: "GET"
    }).done(function (response) {

        var dataSourceMaster = response;

        $("#blockGrid").dxDataGrid({
                keyExpr: "id",
                dataSource: dataSourceMaster,
                allowColumnReordering: true,
                allowColumnResizing: true,
                columnAutoWidth: true,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                showBorders: true,
                remoteOperations: {
                    groupPaging: false,
                    filtering : false,
                    paging : false,
                    sorting : false
                },
                columns: [
                    {
                        dataField: "id",
                        visible: false
                    },
                    {
                        dataField: "order",
                        caption: 'Order'
                    },
                    {
                        dataField: "size",
                        caption: 'Initial Size'
                    },
                    {
                        dataField: "updatedSize",
                        caption: 'Actual Size'
                    },
                ],
                masterDetail: {
                    enabled: true,
                    template: function (container, options) {
                    var currentData = options.data;

                    $("<div>")
                        .dxDataGrid({
                            columnAutoWidth: true,
                            showBorders: true,
                            columns: [
                                {
                                    dataField: "id",
                                    visible: false
                                },
                                {
                                    dataField: "blockId",
                                    visible: false
                                },
                                {
                                    dataField: "name",
                                    caption: 'Process Name'
                                },
                                {
                                    dataField: "size",
                                    caption: 'Process Size'
                                },
                                {
                                    dataField: "algorithmType",
                                    caption: 'Algorithm Type'
                                },
                                {
                                    dataField: "FreeProcess",
                                    caption: 'Free Process',
                                    cellTemplate: function (container, options) {

                                        var wrapper = $("<center>");
                                        var FreeContainer = $("<div>");

                                        container.append(wrapper.append(FreeContainer));

                                        FreeContainer.dxButton({
                                            hint: 'FreeProcess',
                                            type: 'danger',
                                            icon: 'fa fa-trash',
                                            width: 50,
                                            onClick: function () {
                                                var url = "@Url.Action("FreeProcess","Blocks")/" + options.data['id'];
                                                $.ajax({
                                                    url: url,
                                                    type: "POST"
                                                }).done(function (response) {
                                                    responseUrl = '@Url.Action("Index", "Blocks")'
                                                    window.location.href = responseUrl;
                                                });
                                                
                                                
                                            }
                                        });
                                    }
                                },
                            ],
                            dataSource: new DevExpress.data.DataSource({
                                store: new DevExpress.data.ArrayStore({
                                    key: "id",
                                    data: currentData.processes
                                }),
                                filter: ["blockId", "=", options.key]
                            })
                        }).appendTo(container);
                    }
                }
            });
    });
    </script>
}